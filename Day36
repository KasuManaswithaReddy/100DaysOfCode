#Maximum sum of hour glass

#User function Template for python3

class Solution:
    def findMaxSum(self,n,m,mat):
        #code here
        if n<3 or m<3:
            return-1
        i,j=1,1
        s=0
        while i<n-1:
            while j<m-1:
                curr=mat[i][j]+mat[i-1][j]+mat[i-1][j-1]+mat[i-1][j+1]+mat[i+1][j-1]+mat[i+1][j]+mat[i+1][j+1]
                s = max(s,curr)
                j += 1
            j = 1
            i += 1
            
        return s    



#{ 
 # Driver Code Starts
#Initial Template for Python 3

import math
      
if __name__=='__main__':
    t=int(input())
    for _ in range(t):
        N,M=map(int,input().strip().split(" "))
        Mat=[]
        for i in range(N):
            B=list(map(int,input().strip().split(" ")))
            Mat.append(B)
        ob=Solution()
        ans=ob.findMaxSum(N,M,Mat)
        print(ans) 
# } Driver Code Ends
